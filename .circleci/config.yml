# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    machine: true
    environment:
      PROJECT: ${CIRCLE_SHA1:0:8}
      IMAGE_NAME: 305686791668.dkr.ecr.ap-southeast-2.amazonaws.com/uptick
    steps:
      - checkout
      # DLC?
      # - setup_remote_docker:
      #   docker_layer_caching: true
      - run: docker build -f builds/test/Dockerfile --tag $IMAGE_NAME:$PROJECT

  lint-python:
    docker:
      image: circleci/python:3.7
    steps:
      - run: PYTHON_FILES_CHANGED=$(git diff --name-only ${CIRCLE_SHA1} -- '*.py')
      - run: if [ ! -z ${PYTHON_FILES_CHANGED} ]; then flake8 ${PYTHON_FILES_CHANGED} && isort --check-only ${PYTHON_FILES_CHANGED}; fi;
      # Artifacts?

  # lint-javascript:
  #   # TODO: Image
  #   steps:
  #     - run: JS_FILES_CHANGED=$(git diff --name-only ${DRONE_COMMIT_SHA} -- '*.js' '*.jsx')
  #     - run: if [ ! -z ${PYTHON_FILES_CHANGED} ]; then eslint ${JS_FILES_CHANGED}; fi;
  #     # Artifacts?

  backend-test:
    machine: true
    requires: build
    steps:
      - run: docker-compose -f docker-compose.yml run --rm web ./manage.py test

  # frontend-test:
  #   # TODO: Image
  #   steps:
  #     # Yarn first?
  #     - run: yarn test

